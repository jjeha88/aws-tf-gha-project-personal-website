name: Terraform CI/CD

on:
  push:
    branches: [ "master" ]   # 필요시 "master" 등으로 변경
  workflow_dispatch:

permissions:
  id-token: write   # OIDC로 AWS 역할 가정에 필요
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: "true"

    defaults:
      run:
        working-directory: ./terraform   # Terraform 코드 경로

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5   # 프로젝트 버전에 맞게 고정

      - name: Configure AWS credentials (OIDC role)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAM_ROLE }}     # 예: arn:aws:iam::123456789012:role/gha-terraform-role
          aws-region: ${{ secrets.AWS_REGION }}       # 예: ap-northeast-2

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      # 방법 1: plan에서는 -var로 직접 전달
      - name: Terraform Plan
        run: |
          terraform plan \
            -var "bucket_name=${{ secrets.BUCKET_NAME }}" \
            -out=tfplan

      # 방법 2: apply에서는 TF_VAR_* 환경변수 사용 (Terraform이 자동 인식)
      - name: Terraform Apply (auto-approve)
        env:
          TF_VAR_bucket_name: ${{ secrets.BUCKET_NAME }}
        run: terraform apply -input=false -auto-approve
